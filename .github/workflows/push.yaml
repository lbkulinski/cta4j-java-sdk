name: cta4j Java SDK - Build & Deploy to Maven Central
on:
  push:
    branches: [ "main" ]
permissions:
  contents: write
concurrency:
  group: deploy-main
  cancel-in-progress: true
jobs:
  publish:
    name: Publish to Maven Central
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: "corretto"
          java-version: "21"
          cache: "maven"

      - name: Import GPG key
        run: |
          printf '%s' "$GPG_PRIVATE_KEY" | gpg --batch --import
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Build and test
        run: mvn -B clean verify

      - name: Read project version from pom.xml
        id: ver
        run: |
          VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:3.5.0:exec)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Build and deploy
        if: "!contains(steps.ver.outputs.version, 'SNAPSHOT')"
        run: mvn -B deploy -P release --settings .github/maven-settings.xml
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Create tag if missing
        if: "!contains(steps.ver.outputs.version, 'SNAPSHOT')"
        run: |
          TAG="v${{ steps.ver.outputs.version }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists."
          else
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git tag -a "$TAG" -m "Release $TAG"
            git push origin "$TAG"
          fi

      - name: Extract release notes from CHANGELOG.md
        if: "!contains(steps.ver.outputs.version, 'SNAPSHOT')"
        id: notes
        run: |
          VER="${{ steps.ver.outputs.version }}"
          # Grab the section that starts at "## [VER]" and ends before the next "## "
          awk -v ver="$VER" 'BEGIN { regex="^## \\[" ver "\\]" } $0 ~ regex {flag=1; next} flag && /^##[[:space:]]/ {flag=0} flag' CHANGELOG.md > RELEASE_NOTES.md || true

          # Fallback if empty
          if [ ! -s RELEASE_NOTES.md ]; then
            echo "No changelog section found for ${VER}." > RELEASE_NOTES.md
          fi
          echo "path=RELEASE_NOTES.md" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release using CHANGELOG section
        if: "!contains(steps.ver.outputs.version, 'SNAPSHOT')"
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.ver.outputs.version }}
          name: cta4j-java-sdk v${{ steps.ver.outputs.version }}
          body_path: ${{ steps.notes.outputs.path }}
          files: |
            target/cta4j-java-sdk-*.jar
            target/cta4j-java-sdk-*-sources.jar
            target/cta4j-java-sdk-*-javadoc.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
