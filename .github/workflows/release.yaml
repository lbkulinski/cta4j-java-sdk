name: cta4j Java SDK - Release & Publish to Maven Central
on:
  push:
    tags: [ "v*" ]

concurrency:
  group: deploy-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set up JDK and configure Maven server & GPG
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: '21'
          server-id: ossrh
          server-username: ${{ secrets.OSSRH_USERNAME }}
          server-password: ${{ secrets.OSSRH_PASSWORD }}
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Read project version from pom.xml
        id: ver
        run: |
          VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:3.5.0:exec)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Build, sign and deploy to Maven Central
        run: mvn -B clean deploy
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

      - name: Extract release notes from CHANGELOG.md
        id: notes
        run: |
          VER="${{ steps.ver.outputs.version }}"
          awk -v ver="$VER" 'BEGIN { regex="^##[[:space:]]+\\[?" ver "\\]?(\\s*-.*)?$" } $0 ~ regex {flag=1; next} flag && /^##[[:space:]]/ {flag=0} flag' CHANGELOG.md > RELEASE_NOTES.md || true
          if [ ! -s RELEASE_NOTES.md ]; then
            echo "No changelog section found for ${VER}." > RELEASE_NOTES.md
          fi
          echo "path=RELEASE_NOTES.md" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release and upload artifacts
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: cta4j-api ${{ github.ref_name }}
          body_path: ${{ steps.notes.outputs.path }}
          overwrite_files: true
          files: |
            target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
